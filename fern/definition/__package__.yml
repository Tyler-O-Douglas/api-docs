# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

service:
  auth: true
  base-path: ""
  endpoints:
    CreateLeastCostFulfillment:
      display-name: Least Cost Fulfillment
      docs: For a shipment, find the lowest cost and fasest shipping option based on provided parameters.
      method: POST
      path: /lcf
      request: CreateLcfRequest
      response: LeastCostFulfillment
      errors:
        - NotAuthorized
        - BadRequest
        - InternalServerError
        - NotFound
      examples: 
        - request: $CreateLcfRequest.Example1
          response: 
            body: $LeastCostFulfillment.Example1
    CreatePackage:
      display-name: Pack Order
      docs: Find the smallest package(s) all items in an order can fit into.
      method: POST
      path: /pack
      request: CreatePackRequest
      response: PackageOptions
      errors:
        - NotAuthorized
        - BadRequest
        - InternalServerError
        - NotFound
      examples: 
        - request: $CreatePackRequest.Example1
          response: 
            body: $PackageOptions.Example1

types:

  CreatePackRequest:
    properties:
      orderId: 
        type: string
        docs: |
          A unique identifier for the shipment.
          This is used for future reference and must be unique.
      items: 
        type: Items
        docs: |
          The items included in the order you want String to pack.
    examples:
      - name: Example1
        value:
            orderId: "shopify_12345"
            items: $Items.Example1

  CreateLcfRequest:
    properties:
      orderId:
        type: string
        docs: |
          A unique identifier for the shipment.
          This is used for future reference and must be unique.
      shipTo:
        type: ShipTo
        docs: The address the shipment is being shipped to.
      deliveryCommitment:
        type: optional<integer>
        docs: |
          The time-in-transit limit for a shipment.  If no limit, set as null or don't set at all.
      package:
        type: optional<Package>
        docs: |
          The dimensions and weight of the package being shipped.
          Add this object if you do not want String to find a package size for you.
      items: 
        type: optional<Items>
        docs: |
          The items included in the order you're shipping.
          Add this array to the order object if you want to find the smallest package based on items you're shipping.
    examples:
      - name: Example1
        value:
            orderId: "shopify_12345"
            shipTo: $ShipTo.Apple
            deliveryCommitment: 3
            package: $Package.Example1

  ShipTo:
    properties:
      street1:
        type: string
        docs: |
          The street address you're shipping a package to.  
          If your customer has a second address line, like an apartment number, add street2.
      street2: optional<string>
      city:
        type: string
        docs: The city you're shipping a package to.
      state:
        type: string
        docs: |
          The state you're shipping a package to. 
          Two digit code.  For example, 'CA' for California or 'OH' for Ohio.
      postalCode:
        type: string
        docs: |
          The postal code you're shipping a package to. 
          This must be a 5 or 9 digit numerical code.  If 9 digits, you must include a hyphen between the first 5 and last 4 digits.
          9 digit example: '12345-6789'
      country: 
        type: Country
      isResidential:
        type: boolean
        docs: If the address is residential, set as true.  If commercial, set as false.
    examples:
      - name: Apple
        value:
          street1: "One Apple Park Way"
          city: "Cupertino"
          state: "CA"
          postalCode: "95014"
          country: US
          isResidential: false
  
  Country:
    enum:
      - US
    docs: The country you're shipping an order to.  Only 'US' is supported at this time.

  Items:
    type: set<Item>
    docs: |
      The items included in the order you're shipping.
      Used if you want to find the smallest package for an order
    examples:
      - name: Example1
        value:
          - dimensions: $Dimensions.Example1
            weight: $Weight.Example1
            quantity: 1
          - sku: "67890"
            quantity: 2

  Item:
    properties:
      sku:
        type: optional<string>
        docs: |
          The unique identifier String will use to model how the item can be packed onto a package.
          Do not provide a sku if you want to provide the item's dimensions and weight.
      dimensions: 
        type: optional<Dimensions>
        docs: |
          The length, width, and height of the item in inches.  Order does not matter.
          Do not provide dimensions if you want to provide the item's sku.
      weight: 
        type: optional<Weight>
        docs: |
          The weight of the item in pounds (lbs). Include up to 2 decimal places.
          Do not provide weight if you want to provide the item's sku.
      quantity:
        type: integer
        docs: The number of this item included in the order.

  Package:
    properties:
      dimensions: Dimensions
      weight: Weight
    examples:
      - name: Example1
        value:
          dimensions: $Dimensions.Example1
          weight: $Weight.Example1

  Dimensions:
    type: set<double>
    docs: The length, width, and height of the package in inches.  Order does not matter.
    examples:
      - name: Example1
        value: [14, 10, 3]

  Weight:
    type: double
    docs: The weight of the package in pounds (lbs). Include up to 2 decimal places.
    examples:
      - name: Example1
        value: 1.5

  PackageOptions: 
    properties:
      id: 
        type: string
        docs: |
          The unique identifier you specified for the request.
      packages: 
        type: set<PackageOption>
        docs: |
          An array of packages that can fit all items in the order.
          Right now, String will only return one package.
          In the future, String will return multiple packages if the order requires it.
    examples: 
      - name: Example1
        value: 
          id: "shopify_12345"
          packages: [$PackageOption.Example1]

  PackageOption:
    properties:
      name: 
        type: string
        docs: |
          The name of the package String found that can fit all items in the order.
      weight: 
        type: double
        docs: |
          The weight of the package packed with items in it.
          in pounds (lbs). Includes up to 2 decimal places.
      dimensions:
        type: set<double>
        docs: |
          The length, width, and height of the package in inches.  Order does not matter.
    examples:
      - name: Example1
        value:
          name: "Example Package"
          weight: 1.5
          dimensions: [14, 10, 3]

        


  LeastCostFulfillment: 
    properties:
      orderId: 
        type: string
      shipTo: 
        type: ShipTo
      tags:
        type: set<string>
        docs: |
          Returns 'LEAST COST FULFILLMENT' if the shipment is the least cost fulfillment option.
          Returns 'NEEDS MANUAL PROCESSING' if String failed to find a shipping configuration.
      comments: 
        type: set<string>
        docs: |
          An array of comments with detailed information about the prediction String just made.
          First comment includes the carrier, service code, account, cost, and package
      service: Service
      parcel: Parcel
    examples: 
      - name: Example1
        value: 
          orderId: "shopify_12345"
          shipTo: $ShipTo.Apple
          tags: ['LEAST COST FULFILLMENT']
          comments: ['UPS - StringTest12345 - Package - Estimated Delivery Date: 2023-06-09']
          service: $Service.Example1
          parcel: $Parcel.TestParcel
      
  Service:
    properties:
      carrier:
        type: CarrierCode
        docs: |
          The carrier that will be used to ship the package.
          
          String will return one of the following carrier codes in order to 
          indicate what carrier you should use to ship your package. 

          If you're using a carrier not incldued in this list, please contact the 
          String team to discuss adding support for your carrier. 
          String can support any carrier with an API.
      service:
        type: string
        docs: | 
          The service code that will be used to ship the package.
          Refer to 'Getting Started' for a list of possible service codes.
      package: 
        type: string
        docs: | 
          The package that will be used to ship the package.
          Refer to 'Getting Started' for a list of possible package codes.
      deliveryDate: 
        type: date
        docs: An RFC 3339, section 5.6 date (YYYY-MM-DD). For example, 2017-07-21.
      saturdayDelivery:
        type: boolean
        docs: |
          If the package includes an extra chrage to be delivered on Saturday. 'True' is only possible for UPS and FedEx.
          Your shipment may still be delivered on Saturday even if this is set to 'False'.
      accountNumber:
        type: string
        docs: |
          Your carrier account that was used to get this rated shipment.
      cost:
        type: double
        docs: The cost of the shipping label String recommends. 
    examples: 
      - name: Example1
        value:
          carrier: "fedex"
          service: "fedex_2day"
          package: "fedex_medium_box_onerate"
          deliveryDate: "2023-06-09"
          saturdayDelivery: false
          accountNumber: "StringTest12345"
          cost: 12.35
  
  CarrierCode: 
    enum: 
      - value: usps
        docs: USPS Carrier
      - value: ups
        docs: UPS Carrier
      - value: fedex
        docs: FEDEX Carrier
      - value: dhl
        docs: DHL Carrier

  Parcel:
    properties:
      name: 
        type: string
        docs: |
          The name of the package String reccomends.
          Defaults to 'CUSTOM_PACKAGE' if the user provides a package.
          If the package is a flat rate package, the name will be the same as the package code.
      dimensions: 
        type: ParcelDimensions
      weight: 
        type: ParcelWeight
    examples:
      - name: TestParcel
        value:
          name: "CUSTOM_PACKAGE"
          dimensions:
            units: "inches"
            length: 14
            width: 10
            height: 3
          weight:
            value: 1.5
            unit: "pounds"

  ParcelDimensions:
    properties:
      units:
        type: string
        docs: The units of measurement for the package dimensions.  Only 'inches' is supported at this time.
      length:
        type: double
        docs: The length of the package in inches.
      width:
        type: double
        docs: The width of the package in inches.
      height:
        type: double
        docs: The height of the package in inches.
  
  ParcelWeight:
    properties:
      value:
        type: double
        docs: The weight of the package in pounds.
      unit:
        type: string
        docs: The units of measurement for the package weight.  Only 'pounds' is supported at this time.






errors:
  NotAuthorized:
    status-code: 401  
  BadRequest:
    status-code: 400
  NotFound:
    status-code: 404
  InternalServerError:
    status-code: 500
